{
  "version": 3,
  "file": "drag-enabled.umd.min.js",
  "sources": [
    "ng://drag-enabled/out/src/app/drag-enabled/datatransfer.ts",
    "ng://drag-enabled/out/src/app/drag-enabled/drop.directive.ts",
    "ng://drag-enabled/out/src/app/drag-enabled/drag.directive.ts",
    "ng://drag-enabled/out/src/app/drag-enabled/dragdrop.module.ts"
  ],
  "sourcesContent": [
    "/*\r\n * The main purpose for this object is to fix the short coming of drag event dataTransfer object.\r\n * It accepts only String values. However, if there is a need to pass an object, this singletoncan \r\n * come to the resecue. \r\n */\r\nimport { Injectable, Inject  } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataTransfer {\r\n    \r\n    private data: any = {};\r\n\r\n    constructor() {}\r\n\r\n    setData(name, value){\r\n        this.data[name] = value;\r\n    }\r\n\r\n    getData(name) {\r\n        return this.data[name];\r\n    }\r\n            \r\n}",
    "import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    Renderer,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DataTransfer } from './datatransfer';\r\n\r\nexport interface DropEvent {\r\n    source: {\r\n        medium: any,\r\n        node: HTMLElement\r\n    },\r\n    destination: {\r\n        medium: any,\r\n        node: HTMLElement\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[dropEnabled]'\r\n})\r\nexport class DropDirective {\r\n    \r\n    @Input('medium')\r\n    medium: any;\r\n        \r\n    @Input()\r\n    dropEffect = \"move\";\r\n        \r\n    @Input(\"dropEnabled\")\r\n    dropEnabled = (event: DropEvent) => true;\r\n\r\n    @Output()\r\n    onDragEnter: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragLeave: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrop: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragOver: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private renderer: Renderer,\r\n        private el: ElementRef\r\n    ) {}\r\n    \r\n\tprivate createDropEvent() {\r\n\t\treturn {\r\n            source: this.dataTransfer.getData(\"source\"),\r\n            destination: {\r\n                medium: this.medium,\r\n                node: this.el.nativeElement\r\n            }\r\n\t\t};\r\n\t}\r\n\t\r\n    @HostListener('drop', ['$event'])\r\n    drop(event) {\r\n        event.preventDefault();\r\n        const dropEvent = this.createDropEvent();\r\n\r\n        this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            this.onDrop.emit(dropEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragenter', ['$event']) \r\n    dragEnter(event) {\r\n        event.preventDefault();\r\n        const dropEvent = this.createDropEvent();\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            event.dataTransfer.dropEffect = this.dropEffect;\r\n\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n            this.onDragEnter.emit(dropEvent);\r\n        } else {\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragleave', ['$event']) \r\n    dragLeave(event) {\r\n        event.preventDefault();\r\n                \r\n        this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n        this.onDragLeave.emit(event);\r\n    }\r\n    \r\n    @HostListener('dragover', ['$event']) \r\n    dragOver(event) {\r\n        const dropEvent = this.createDropEvent();\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            event.preventDefault();\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n            this.onDragOver.emit(dropEvent);\r\n        } else {\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n        }\r\n    }\r\n}",
    "import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer\r\n} from '@angular/core';\r\nimport { DataTransfer } from './datatransfer';\r\n\r\nexport interface DragEvent {\r\n    medium: any,\r\n    node: HTMLElement\r\n}\r\n\r\n@Directive({\r\n    selector: '[dragEnabled]',\r\n    host: {\r\n        '[draggable]': 'true'\r\n    }\r\n})\r\nexport class DragDirective {\r\n    \r\n    @Input(\"medium\")\r\n    medium: any;\r\n    \r\n    @Input(\"dragEffect\")\r\n    dragEffect = \"move\";\r\n    \r\n    @Input(\"dragEnabled\")\r\n    dragEnabled = (medium) => true;\r\n    \r\n    @Output()\r\n    onDragStart: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragEnd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrag: EventEmitter<any> = new EventEmitter();\r\n    \r\n    private handle: any;\r\n        \r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private renderer: Renderer,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    @HostListener('dragstart', ['$event']) \r\n    dragStart(event) {\r\n        const dragEvent: DragEvent = {\r\n            medium: this.medium,\r\n            node: this.el.nativeElement\r\n        }\r\n        event.stopPropagation();\r\n        if (this.dragEnabled(dragEvent)) {\r\n            event.dataTransfer.effectAllowed = this.dragEffect;\r\n            event.dataTransfer.setData(\"makeItTick\",\"true\");// this is needed just to make drag/drop event trigger.\r\n\r\n            this.dataTransfer.setData(\"source\", dragEvent);\r\n            this.onDragStart.emit(dragEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('drag', ['$event']) \r\n    drag(event) {\r\n        const dragEvent: DragEvent = this.dataTransfer.getData(\"source\");\r\n        if (this.dragEnabled(dragEvent)) {\r\n            this.onDrag.emit(dragEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragend', ['$event']) \r\n    dragEnd(event) {\r\n        event.stopPropagation();\t\r\n        const dragEvent: DragEvent = this.dataTransfer.getData(\"source\");\r\n        this.onDragEnd.emit(dragEvent);\r\n        this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n    }\r\n}\r\n",
    "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DataTransfer } from './datatransfer';\r\nimport { DragDirective } from './drag.directive';\r\nimport { DropDirective } from './drop.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n\t\tDragDirective,\r\n\t\tDropDirective\r\n  ],\r\n  exports: [\r\n\t\tDragDirective,\r\n\t\tDropDirective\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n\t\tDragDirective,\r\n\t\tDropDirective,\r\n    DataTransfer\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class DragDropModule {}\r\n"
  ],
  "names": [
    "DataTransfer",
    "this",
    "data",
    "prototype",
    "setData",
    "name",
    "value",
    "getData",
    "type",
    "Injectable",
    "DropDirective",
    "dataTransfer",
    "renderer",
    "el",
    "dropEffect",
    "dropEnabled",
    "event",
    "onDragEnter",
    "EventEmitter",
    "onDragLeave",
    "onDrop",
    "onDragOver",
    "createDropEvent",
    "source",
    "destination",
    "medium",
    "node",
    "nativeElement",
    "drop",
    "preventDefault",
    "dropEvent",
    "setElementClass",
    "emit",
    "dragEnter",
    "dragLeave",
    "dragOver",
    "Directive",
    "args",
    "selector",
    "Renderer",
    "ElementRef",
    "Input",
    "Output",
    "HostListener",
    "DragDirective",
    "dragEffect",
    "dragEnabled",
    "onDragStart",
    "onDragEnd",
    "onDrag",
    "dragStart",
    "dragEvent",
    "stopPropagation",
    "effectAllowed",
    "drag",
    "dragEnd",
    "host",
    "[draggable]",
    "DragDropModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports",
    "entryComponents",
    "providers",
    "schemas",
    "CUSTOM_ELEMENTS_SCHEMA"
  ],
  "mappings": "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"
}
