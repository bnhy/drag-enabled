{
  "version": 3,
  "file": "drag-enabled.umd.min.js",
  "sources": [
    "ng://drag-enabled/out/src/app/drag-enabled/datatransfer.ts",
    "ng://drag-enabled/out/src/app/drag-enabled/drop.directive.ts",
    "ng://drag-enabled/out/src/app/drag-enabled/drag.directive.ts",
    "ng://drag-enabled/out/src/app/drag-enabled/dragdrop.module.ts"
  ],
  "sourcesContent": [
    "/*\r\n * The main purpose for this object is to fix the short coming of drag event dataTransfer object.\r\n * It accepts only String values. However, if there is a need to pass an object, this singletoncan \r\n * come to the resecue. \r\n */\r\nimport { Injectable, Inject  } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataTransfer {\r\n    \r\n    private data: any = {};\r\n\r\n    constructor() {}\r\n\r\n    setData(name, value){\r\n        this.data[name] = value;\r\n    }\r\n\r\n    getData(name) {\r\n        return this.data[name];\r\n    }\r\n            \r\n}",
    "import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    Renderer,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DataTransfer } from './datatransfer';\r\n\r\nexport interface DropEvent {\r\n    source: any,\r\n    destination: any\r\n}\r\n\r\n@Directive({\r\n    selector: '[dropEnabled]'\r\n})\r\nexport class DropDirective {\r\n    \r\n    @Input('medium')\r\n    medium: any;\r\n        \r\n    @Input()\r\n    dropEffect = \"move\";\r\n        \r\n    @Input(\"dropEnabled\")\r\n    dropEnabled = (event: DropEvent) => true;\r\n\r\n    @Output()\r\n    onDragEnter: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragLeave: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrop: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragOver: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private renderer: Renderer,\r\n        private el: ElementRef\r\n    ) {}\r\n            \r\n    @HostListener('drop', ['$event'])\r\n    drop(event) {\r\n        event.preventDefault();\r\n        const dropEvent = {\r\n            source: this.dataTransfer.getData(\"source\"),\r\n            destination: this.medium\r\n        }\r\n        this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n\r\n        if (this.dropEnabled(dropEvent)) {\r\n            this.onDrop.emit(dropEvent);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragenter', ['$event']) \r\n    dragEnter(event) {\r\n        event.preventDefault();\r\n        const dropEvent = {\r\n            source: this.dataTransfer.getData(\"source\"),\r\n            destination: this.medium\r\n        }\r\n        if (this.dropEnabled(dropEvent)) {\r\n            event.dataTransfer.dropEffect = this.dropEffect;\r\n\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n            this.onDragEnter.emit(dropEvent);\r\n        } else {\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragleave', ['$event']) \r\n    dragLeave(event) {\r\n        event.preventDefault();\r\n                \r\n        this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n        this.onDragLeave.emit(event);\r\n    }\r\n    \r\n    @HostListener('dragover', ['$event']) \r\n    dragOver(event) {\r\n        const dropEvent = {\r\n            source: this.dataTransfer.getData(\"source\"),\r\n            destination: this.medium\r\n        }\r\n        if (this.dropEnabled(dropEvent)) {\r\n            event.preventDefault();\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", true);\r\n            this.onDragOver.emit(dropEvent);\r\n        } else {\r\n            this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n        }\r\n    }\r\n}",
    "import {\r\n    Directive,\r\n    ElementRef,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer\r\n} from '@angular/core';\r\nimport { DataTransfer } from './datatransfer';\r\n\r\n@Directive({\r\n    selector: '[dragEnabled]',\r\n    host: {\r\n        '[draggable]': 'true'\r\n    }\r\n})\r\nexport class DragDirective {\r\n    \r\n    @Input(\"medium\")\r\n    medium: any;\r\n    \r\n    @Input(\"dragEffect\")\r\n    dragEffect = \"move\";\r\n    \r\n    @Input(\"dragEnabled\")\r\n    dragEnabled = (medium) => true;\r\n    \r\n    @Output()\r\n    onDragStart: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDragEnd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output()\r\n    onDrag: EventEmitter<any> = new EventEmitter();\r\n    \r\n    private handle: any;\r\n        \r\n    constructor(\r\n        private dataTransfer: DataTransfer,\r\n        private renderer: Renderer,\r\n        private el: ElementRef\r\n    ) {\r\n    }\r\n\r\n    @HostListener('dragstart', ['$event']) \r\n    dragStart(event) {\r\n        event.stopPropagation();\r\n        if (this.dragEnabled(this.medium)) {\r\n            event.dataTransfer.effectAllowed = this.dragEffect;\r\n            event.dataTransfer.setData(\"makeItTick\",\"true\");// this is needed just to make drag/drop event trigger.\r\n\r\n            this.dataTransfer.setData(\"source\", this.medium);\r\n            this.onDragStart.emit(this.medium);\r\n        }\r\n    }\r\n    \r\n    @HostListener('drag', ['$event']) \r\n    drag(event) {\r\n        if (this.dragEnabled(this.medium)) {\r\n            this.onDrag.emit(this.medium);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragend', ['$event']) \r\n    dragEnd(event) {\r\n        event.stopPropagation();\t\r\n        this.onDragEnd.emit(this.medium);\r\n        this.renderer.setElementClass(this.el.nativeElement, \"drag-over\", false);\r\n    }\r\n}\r\n",
    "import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DataTransfer } from './datatransfer';\r\nimport { DragDirective } from './drag.directive';\r\nimport { DropDirective } from './drop.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n\t\tDragDirective,\r\n\t\tDropDirective\r\n  ],\r\n  exports: [\r\n\t\tDragDirective,\r\n\t\tDropDirective\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n\t\tDragDirective,\r\n\t\tDropDirective,\r\n    DataTransfer\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class DragDropModule {}\r\n"
  ],
  "names": [
    "DataTransfer",
    "this",
    "data",
    "prototype",
    "setData",
    "name",
    "value",
    "getData",
    "type",
    "Injectable",
    "DropDirective",
    "dataTransfer",
    "renderer",
    "el",
    "dropEffect",
    "dropEnabled",
    "event",
    "onDragEnter",
    "EventEmitter",
    "onDragLeave",
    "onDrop",
    "onDragOver",
    "drop",
    "preventDefault",
    "dropEvent",
    "source",
    "destination",
    "medium",
    "setElementClass",
    "nativeElement",
    "emit",
    "dragEnter",
    "dragLeave",
    "dragOver",
    "Directive",
    "args",
    "selector",
    "Renderer",
    "ElementRef",
    "Input",
    "Output",
    "HostListener",
    "DragDirective",
    "dragEffect",
    "dragEnabled",
    "onDragStart",
    "onDragEnd",
    "onDrag",
    "dragStart",
    "stopPropagation",
    "effectAllowed",
    "drag",
    "dragEnd",
    "host",
    "[draggable]",
    "DragDropModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports",
    "entryComponents",
    "providers",
    "schemas",
    "CUSTOM_ELEMENTS_SCHEMA"
  ],
  "mappings": "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"
}
